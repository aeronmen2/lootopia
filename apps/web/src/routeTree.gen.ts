/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as UserIndexImport } from './routes/user/index'
import { Route as MyHuntsIndexImport } from './routes/my-hunts/index'
import { Route as JoinIndexImport } from './routes/join/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as CreateIndexImport } from './routes/create/index'
import { Route as VerifyEmailImport } from './routes/verify.$email'
import { Route as HuntHuntIdImport } from './routes/hunt/$huntId'
import { Route as EditHuntIdImport } from './routes/edit/$huntId'
import { Route as DashboardTransactionsImport } from './routes/dashboard/transactions'
import { Route as DashboardRouteBImport } from './routes/dashboard/route-b'
import { Route as DashboardRouteAImport } from './routes/dashboard/route-a'
import { Route as DashboardMarketplaceImport } from './routes/dashboard/marketplace'
import { Route as DashboardCreateArtifactImport } from './routes/dashboard/create-artifact'
import { Route as DashboardBuyCurrencyImport } from './routes/dashboard/buy-currency'
import { Route as DashboardPaymentIndexImport } from './routes/dashboard/payment/index'
import { Route as DashboardPaymentSuccessImport } from './routes/dashboard/payment/success'
import { Route as DashboardPaymentCancelImport } from './routes/dashboard/payment/cancel'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserIndexRoute = UserIndexImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => rootRoute,
} as any)

const MyHuntsIndexRoute = MyHuntsIndexImport.update({
  id: '/my-hunts/',
  path: '/my-hunts/',
  getParentRoute: () => rootRoute,
} as any)

const JoinIndexRoute = JoinIndexImport.update({
  id: '/join/',
  path: '/join/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const CreateIndexRoute = CreateIndexImport.update({
  id: '/create/',
  path: '/create/',
  getParentRoute: () => rootRoute,
} as any)

const VerifyEmailRoute = VerifyEmailImport.update({
  id: '/verify/$email',
  path: '/verify/$email',
  getParentRoute: () => rootRoute,
} as any)

const HuntHuntIdRoute = HuntHuntIdImport.update({
  id: '/hunt/$huntId',
  path: '/hunt/$huntId',
  getParentRoute: () => rootRoute,
} as any)

const EditHuntIdRoute = EditHuntIdImport.update({
  id: '/edit/$huntId',
  path: '/edit/$huntId',
  getParentRoute: () => rootRoute,
} as any)

const DashboardTransactionsRoute = DashboardTransactionsImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardRouteBRoute = DashboardRouteBImport.update({
  id: '/route-b',
  path: '/route-b',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardRouteARoute = DashboardRouteAImport.update({
  id: '/route-a',
  path: '/route-a',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardMarketplaceRoute = DashboardMarketplaceImport.update({
  id: '/marketplace',
  path: '/marketplace',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCreateArtifactRoute = DashboardCreateArtifactImport.update({
  id: '/create-artifact',
  path: '/create-artifact',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardBuyCurrencyRoute = DashboardBuyCurrencyImport.update({
  id: '/buy-currency',
  path: '/buy-currency',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPaymentIndexRoute = DashboardPaymentIndexImport.update({
  id: '/payment/',
  path: '/payment/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPaymentSuccessRoute = DashboardPaymentSuccessImport.update({
  id: '/payment/success',
  path: '/payment/success',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPaymentCancelRoute = DashboardPaymentCancelImport.update({
  id: '/payment/cancel',
  path: '/payment/cancel',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/buy-currency': {
      id: '/dashboard/buy-currency'
      path: '/buy-currency'
      fullPath: '/dashboard/buy-currency'
      preLoaderRoute: typeof DashboardBuyCurrencyImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/create-artifact': {
      id: '/dashboard/create-artifact'
      path: '/create-artifact'
      fullPath: '/dashboard/create-artifact'
      preLoaderRoute: typeof DashboardCreateArtifactImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/marketplace': {
      id: '/dashboard/marketplace'
      path: '/marketplace'
      fullPath: '/dashboard/marketplace'
      preLoaderRoute: typeof DashboardMarketplaceImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/route-a': {
      id: '/dashboard/route-a'
      path: '/route-a'
      fullPath: '/dashboard/route-a'
      preLoaderRoute: typeof DashboardRouteAImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/route-b': {
      id: '/dashboard/route-b'
      path: '/route-b'
      fullPath: '/dashboard/route-b'
      preLoaderRoute: typeof DashboardRouteBImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/transactions': {
      id: '/dashboard/transactions'
      path: '/transactions'
      fullPath: '/dashboard/transactions'
      preLoaderRoute: typeof DashboardTransactionsImport
      parentRoute: typeof DashboardImport
    }
    '/edit/$huntId': {
      id: '/edit/$huntId'
      path: '/edit/$huntId'
      fullPath: '/edit/$huntId'
      preLoaderRoute: typeof EditHuntIdImport
      parentRoute: typeof rootRoute
    }
    '/hunt/$huntId': {
      id: '/hunt/$huntId'
      path: '/hunt/$huntId'
      fullPath: '/hunt/$huntId'
      preLoaderRoute: typeof HuntHuntIdImport
      parentRoute: typeof rootRoute
    }
    '/verify/$email': {
      id: '/verify/$email'
      path: '/verify/$email'
      fullPath: '/verify/$email'
      preLoaderRoute: typeof VerifyEmailImport
      parentRoute: typeof rootRoute
    }
    '/create/': {
      id: '/create/'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/join/': {
      id: '/join/'
      path: '/join'
      fullPath: '/join'
      preLoaderRoute: typeof JoinIndexImport
      parentRoute: typeof rootRoute
    }
    '/my-hunts/': {
      id: '/my-hunts/'
      path: '/my-hunts'
      fullPath: '/my-hunts'
      preLoaderRoute: typeof MyHuntsIndexImport
      parentRoute: typeof rootRoute
    }
    '/user/': {
      id: '/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/payment/cancel': {
      id: '/dashboard/payment/cancel'
      path: '/payment/cancel'
      fullPath: '/dashboard/payment/cancel'
      preLoaderRoute: typeof DashboardPaymentCancelImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/payment/success': {
      id: '/dashboard/payment/success'
      path: '/payment/success'
      fullPath: '/dashboard/payment/success'
      preLoaderRoute: typeof DashboardPaymentSuccessImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/payment/': {
      id: '/dashboard/payment/'
      path: '/payment'
      fullPath: '/dashboard/payment'
      preLoaderRoute: typeof DashboardPaymentIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardBuyCurrencyRoute: typeof DashboardBuyCurrencyRoute
  DashboardCreateArtifactRoute: typeof DashboardCreateArtifactRoute
  DashboardMarketplaceRoute: typeof DashboardMarketplaceRoute
  DashboardRouteARoute: typeof DashboardRouteARoute
  DashboardRouteBRoute: typeof DashboardRouteBRoute
  DashboardTransactionsRoute: typeof DashboardTransactionsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardPaymentCancelRoute: typeof DashboardPaymentCancelRoute
  DashboardPaymentSuccessRoute: typeof DashboardPaymentSuccessRoute
  DashboardPaymentIndexRoute: typeof DashboardPaymentIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardBuyCurrencyRoute: DashboardBuyCurrencyRoute,
  DashboardCreateArtifactRoute: DashboardCreateArtifactRoute,
  DashboardMarketplaceRoute: DashboardMarketplaceRoute,
  DashboardRouteARoute: DashboardRouteARoute,
  DashboardRouteBRoute: DashboardRouteBRoute,
  DashboardTransactionsRoute: DashboardTransactionsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardPaymentCancelRoute: DashboardPaymentCancelRoute,
  DashboardPaymentSuccessRoute: DashboardPaymentSuccessRoute,
  DashboardPaymentIndexRoute: DashboardPaymentIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/dashboard/buy-currency': typeof DashboardBuyCurrencyRoute
  '/dashboard/create-artifact': typeof DashboardCreateArtifactRoute
  '/dashboard/marketplace': typeof DashboardMarketplaceRoute
  '/dashboard/route-a': typeof DashboardRouteARoute
  '/dashboard/route-b': typeof DashboardRouteBRoute
  '/dashboard/transactions': typeof DashboardTransactionsRoute
  '/edit/$huntId': typeof EditHuntIdRoute
  '/hunt/$huntId': typeof HuntHuntIdRoute
  '/verify/$email': typeof VerifyEmailRoute
  '/create': typeof CreateIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/join': typeof JoinIndexRoute
  '/my-hunts': typeof MyHuntsIndexRoute
  '/user': typeof UserIndexRoute
  '/dashboard/payment/cancel': typeof DashboardPaymentCancelRoute
  '/dashboard/payment/success': typeof DashboardPaymentSuccessRoute
  '/dashboard/payment': typeof DashboardPaymentIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/dashboard/buy-currency': typeof DashboardBuyCurrencyRoute
  '/dashboard/create-artifact': typeof DashboardCreateArtifactRoute
  '/dashboard/marketplace': typeof DashboardMarketplaceRoute
  '/dashboard/route-a': typeof DashboardRouteARoute
  '/dashboard/route-b': typeof DashboardRouteBRoute
  '/dashboard/transactions': typeof DashboardTransactionsRoute
  '/edit/$huntId': typeof EditHuntIdRoute
  '/hunt/$huntId': typeof HuntHuntIdRoute
  '/verify/$email': typeof VerifyEmailRoute
  '/create': typeof CreateIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/join': typeof JoinIndexRoute
  '/my-hunts': typeof MyHuntsIndexRoute
  '/user': typeof UserIndexRoute
  '/dashboard/payment/cancel': typeof DashboardPaymentCancelRoute
  '/dashboard/payment/success': typeof DashboardPaymentSuccessRoute
  '/dashboard/payment': typeof DashboardPaymentIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/dashboard/buy-currency': typeof DashboardBuyCurrencyRoute
  '/dashboard/create-artifact': typeof DashboardCreateArtifactRoute
  '/dashboard/marketplace': typeof DashboardMarketplaceRoute
  '/dashboard/route-a': typeof DashboardRouteARoute
  '/dashboard/route-b': typeof DashboardRouteBRoute
  '/dashboard/transactions': typeof DashboardTransactionsRoute
  '/edit/$huntId': typeof EditHuntIdRoute
  '/hunt/$huntId': typeof HuntHuntIdRoute
  '/verify/$email': typeof VerifyEmailRoute
  '/create/': typeof CreateIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/join/': typeof JoinIndexRoute
  '/my-hunts/': typeof MyHuntsIndexRoute
  '/user/': typeof UserIndexRoute
  '/dashboard/payment/cancel': typeof DashboardPaymentCancelRoute
  '/dashboard/payment/success': typeof DashboardPaymentSuccessRoute
  '/dashboard/payment/': typeof DashboardPaymentIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/signup'
    | '/dashboard/buy-currency'
    | '/dashboard/create-artifact'
    | '/dashboard/marketplace'
    | '/dashboard/route-a'
    | '/dashboard/route-b'
    | '/dashboard/transactions'
    | '/edit/$huntId'
    | '/hunt/$huntId'
    | '/verify/$email'
    | '/create'
    | '/dashboard/'
    | '/join'
    | '/my-hunts'
    | '/user'
    | '/dashboard/payment/cancel'
    | '/dashboard/payment/success'
    | '/dashboard/payment'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/dashboard/buy-currency'
    | '/dashboard/create-artifact'
    | '/dashboard/marketplace'
    | '/dashboard/route-a'
    | '/dashboard/route-b'
    | '/dashboard/transactions'
    | '/edit/$huntId'
    | '/hunt/$huntId'
    | '/verify/$email'
    | '/create'
    | '/dashboard'
    | '/join'
    | '/my-hunts'
    | '/user'
    | '/dashboard/payment/cancel'
    | '/dashboard/payment/success'
    | '/dashboard/payment'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/signup'
    | '/dashboard/buy-currency'
    | '/dashboard/create-artifact'
    | '/dashboard/marketplace'
    | '/dashboard/route-a'
    | '/dashboard/route-b'
    | '/dashboard/transactions'
    | '/edit/$huntId'
    | '/hunt/$huntId'
    | '/verify/$email'
    | '/create/'
    | '/dashboard/'
    | '/join/'
    | '/my-hunts/'
    | '/user/'
    | '/dashboard/payment/cancel'
    | '/dashboard/payment/success'
    | '/dashboard/payment/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  EditHuntIdRoute: typeof EditHuntIdRoute
  HuntHuntIdRoute: typeof HuntHuntIdRoute
  VerifyEmailRoute: typeof VerifyEmailRoute
  CreateIndexRoute: typeof CreateIndexRoute
  JoinIndexRoute: typeof JoinIndexRoute
  MyHuntsIndexRoute: typeof MyHuntsIndexRoute
  UserIndexRoute: typeof UserIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  EditHuntIdRoute: EditHuntIdRoute,
  HuntHuntIdRoute: HuntHuntIdRoute,
  VerifyEmailRoute: VerifyEmailRoute,
  CreateIndexRoute: CreateIndexRoute,
  JoinIndexRoute: JoinIndexRoute,
  MyHuntsIndexRoute: MyHuntsIndexRoute,
  UserIndexRoute: UserIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/login",
        "/signup",
        "/edit/$huntId",
        "/hunt/$huntId",
        "/verify/$email",
        "/create/",
        "/join/",
        "/my-hunts/",
        "/user/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/buy-currency",
        "/dashboard/create-artifact",
        "/dashboard/marketplace",
        "/dashboard/route-a",
        "/dashboard/route-b",
        "/dashboard/transactions",
        "/dashboard/",
        "/dashboard/payment/cancel",
        "/dashboard/payment/success",
        "/dashboard/payment/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/dashboard/buy-currency": {
      "filePath": "dashboard/buy-currency.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/create-artifact": {
      "filePath": "dashboard/create-artifact.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/marketplace": {
      "filePath": "dashboard/marketplace.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/route-a": {
      "filePath": "dashboard/route-a.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/route-b": {
      "filePath": "dashboard/route-b.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/transactions": {
      "filePath": "dashboard/transactions.tsx",
      "parent": "/dashboard"
    },
    "/edit/$huntId": {
      "filePath": "edit/$huntId.tsx"
    },
    "/hunt/$huntId": {
      "filePath": "hunt/$huntId.tsx"
    },
    "/verify/$email": {
      "filePath": "verify.$email.tsx"
    },
    "/create/": {
      "filePath": "create/index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/join/": {
      "filePath": "join/index.tsx"
    },
    "/my-hunts/": {
      "filePath": "my-hunts/index.tsx"
    },
    "/user/": {
      "filePath": "user/index.tsx"
    },
    "/dashboard/payment/cancel": {
      "filePath": "dashboard/payment/cancel.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/payment/success": {
      "filePath": "dashboard/payment/success.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/payment/": {
      "filePath": "dashboard/payment/index.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
